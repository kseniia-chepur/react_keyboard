{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","enteredKey","handleKeyPress","e","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACGT,EAEG,oBAAGS,UAAU,eAAb,sCAEGT,EAFH,OAMA,mBAAGS,UAAU,eAAb,2CA9BZ,GAAyBC,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c249c7fe.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    enteredKey: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (e:KeyboardEvent) => {\n    this.setState({ enteredKey: e.key });\n  };\n\n  render() {\n    const { enteredKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {enteredKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {enteredKey}\n              ]\n            </p>\n          )\n          : <p className=\"App__message\">Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}